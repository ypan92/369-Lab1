Partners: Daniel Lee & Yang Pan

Assignment: Lab 1 - BeFuddled


In the Makefile for beFuddled, I was require to specify file separators when running the jar file as a colon (:) on a mac.  This may differ on a Windows machine.

Compiling this program can be done with the following command:
	javac -cp ./org.json-20120521 beFuddledGen.java beFuddledGame.java

Running this program can be done with the following command:
	java -cp .:org.json-20120521 beFuddledGen fileName logRecords
		where fileName is commandline argument specifying the file to write output json to
		and logRecords is an Integer that determines how many json log records to create


In order to determine randomness for our json generation for the BeFuddled game, we used the following probability distributions:


Initial number of games ongoing at the same time:
	based on total number of logRecords (number of json to generate
	specified by the user as a commandline argument):
		(1-10) : 1
		(11+) : logRecords * random(.05, .15) - cap number of games

Moves per game:
	10% chance a game has 9-20 moves
	20% chance a game has 21-30 moves
	50% chance a game has 31-50 moves
	15% chance a game has 51-70 moves
	5% chance a game has 71-100 moves


Specification of a win:
	random(0, 1)
	where 0 is a loss and 1 is a win

Specification of a special move:
	random(0, 3)
	where 0 is Shuffle
	1 is Clear
	2 is Invert 
	3 is Rotate


Specification of special move or regular move:
	random(1, 100)
	where 1-90 is a regular move
	91-100 is a special move



Special Moves Based on number of moves per game:
	(9-30) moves in a game has 1 special move
	(31-50) moves in a game has 2 special moves
	(50+) moves in a game has 3 special moves



Probablity of starting a game vs playing a game
	70% chance a move will be to play an existing game
	30% chance a move will be to start a new game
		only start a new game if the number of ongoing games is less than the cap number of games


Determining which game to play a move
	randomly select a gameid from the current ongoing games
		select a random number from max game id to min game id
			if it exists, use it, if not do another random game id pull


Board Location x and y coord:
	1-2: 3%
	3-6: 12%
	7-13: 70%
	14-17: 12%
	18-20: 3%
